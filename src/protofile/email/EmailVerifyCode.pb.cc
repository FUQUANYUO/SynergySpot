// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EmailVerifyCode.proto

#include "EmailVerifyCode.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace SSDTO {
PROTOBUF_CONSTEXPR EmailVerifyCode_DTO::EmailVerifyCode_DTO(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.verify_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_time_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.valid_time_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_request_)*/false
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EmailVerifyCode_DTODefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmailVerifyCode_DTODefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmailVerifyCode_DTODefaultTypeInternal() {}
  union {
    EmailVerifyCode_DTO _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmailVerifyCode_DTODefaultTypeInternal _EmailVerifyCode_DTO_default_instance_;
}  // namespace SSDTO
static ::_pb::Metadata file_level_metadata_EmailVerifyCode_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_EmailVerifyCode_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_EmailVerifyCode_2eproto = nullptr;

const uint32_t TableStruct_EmailVerifyCode_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SSDTO::EmailVerifyCode_DTO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SSDTO::EmailVerifyCode_DTO, _impl_.is_request_),
  PROTOBUF_FIELD_OFFSET(::SSDTO::EmailVerifyCode_DTO, _impl_.email_address_),
  PROTOBUF_FIELD_OFFSET(::SSDTO::EmailVerifyCode_DTO, _impl_.verify_code_),
  PROTOBUF_FIELD_OFFSET(::SSDTO::EmailVerifyCode_DTO, _impl_.start_time_),
  PROTOBUF_FIELD_OFFSET(::SSDTO::EmailVerifyCode_DTO, _impl_.valid_time_),
  PROTOBUF_FIELD_OFFSET(::SSDTO::EmailVerifyCode_DTO, _impl_.type_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::SSDTO::EmailVerifyCode_DTO)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::SSDTO::_EmailVerifyCode_DTO_default_instance_._instance,
};

const char descriptor_table_protodef_EmailVerifyCode_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025EmailVerifyCode.proto\022\005SSDTO\032\tDTO.prot"
  "o\"\241\001\n\023EmailVerifyCode_DTO\022\022\n\nis_request\030"
  "\001 \001(\010\022\025\n\remail_address\030\002 \001(\t\022\023\n\013verify_c"
  "ode\030\003 \001(\t\022\022\n\nstart_time\030\004 \001(\t\022\022\n\nvalid_t"
  "ime\030\005 \001(\t\022\"\n\004type\030\006 \001(\0162\024.SSDTO.Business"
  "_Typeb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_EmailVerifyCode_2eproto_deps[1] = {
  &::descriptor_table_DTO_2eproto,
};
static ::_pbi::once_flag descriptor_table_EmailVerifyCode_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_EmailVerifyCode_2eproto = {
    false, false, 213, descriptor_table_protodef_EmailVerifyCode_2eproto,
    "EmailVerifyCode.proto",
    &descriptor_table_EmailVerifyCode_2eproto_once, descriptor_table_EmailVerifyCode_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_EmailVerifyCode_2eproto::offsets,
    file_level_metadata_EmailVerifyCode_2eproto, file_level_enum_descriptors_EmailVerifyCode_2eproto,
    file_level_service_descriptors_EmailVerifyCode_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_EmailVerifyCode_2eproto_getter() {
  return &descriptor_table_EmailVerifyCode_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_EmailVerifyCode_2eproto(&descriptor_table_EmailVerifyCode_2eproto);
namespace SSDTO {

// ===================================================================

class EmailVerifyCode_DTO::_Internal {
 public:
};

EmailVerifyCode_DTO::EmailVerifyCode_DTO(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SSDTO.EmailVerifyCode_DTO)
}
EmailVerifyCode_DTO::EmailVerifyCode_DTO(const EmailVerifyCode_DTO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EmailVerifyCode_DTO* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_address_){}
    , decltype(_impl_.verify_code_){}
    , decltype(_impl_.start_time_){}
    , decltype(_impl_.valid_time_){}
    , decltype(_impl_.is_request_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email_address().empty()) {
    _this->_impl_.email_address_.Set(from._internal_email_address(), 
      _this->GetArenaForAllocation());
  }
  _impl_.verify_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.verify_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_verify_code().empty()) {
    _this->_impl_.verify_code_.Set(from._internal_verify_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.start_time_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.start_time_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_start_time().empty()) {
    _this->_impl_.start_time_.Set(from._internal_start_time(), 
      _this->GetArenaForAllocation());
  }
  _impl_.valid_time_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.valid_time_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_valid_time().empty()) {
    _this->_impl_.valid_time_.Set(from._internal_valid_time(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_request_, &from._impl_.is_request_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.is_request_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:SSDTO.EmailVerifyCode_DTO)
}

inline void EmailVerifyCode_DTO::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.email_address_){}
    , decltype(_impl_.verify_code_){}
    , decltype(_impl_.start_time_){}
    , decltype(_impl_.valid_time_){}
    , decltype(_impl_.is_request_){false}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.verify_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.verify_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.start_time_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.start_time_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.valid_time_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.valid_time_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EmailVerifyCode_DTO::~EmailVerifyCode_DTO() {
  // @@protoc_insertion_point(destructor:SSDTO.EmailVerifyCode_DTO)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EmailVerifyCode_DTO::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_address_.Destroy();
  _impl_.verify_code_.Destroy();
  _impl_.start_time_.Destroy();
  _impl_.valid_time_.Destroy();
}

void EmailVerifyCode_DTO::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EmailVerifyCode_DTO::Clear() {
// @@protoc_insertion_point(message_clear_start:SSDTO.EmailVerifyCode_DTO)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_address_.ClearToEmpty();
  _impl_.verify_code_.ClearToEmpty();
  _impl_.start_time_.ClearToEmpty();
  _impl_.valid_time_.ClearToEmpty();
  ::memset(&_impl_.is_request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.is_request_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmailVerifyCode_DTO::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string email_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SSDTO.EmailVerifyCode_DTO.email_address"));
        } else
          goto handle_unusual;
        continue;
      // string verify_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_verify_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SSDTO.EmailVerifyCode_DTO.verify_code"));
        } else
          goto handle_unusual;
        continue;
      // string start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_start_time();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SSDTO.EmailVerifyCode_DTO.start_time"));
        } else
          goto handle_unusual;
        continue;
      // string valid_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_valid_time();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SSDTO.EmailVerifyCode_DTO.valid_time"));
        } else
          goto handle_unusual;
        continue;
      // .SSDTO.Business_Type type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::SSDTO::Business_Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EmailVerifyCode_DTO::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSDTO.EmailVerifyCode_DTO)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_request = 1;
  if (this->_internal_is_request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_request(), target);
  }

  // string email_address = 2;
  if (!this->_internal_email_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email_address().data(), static_cast<int>(this->_internal_email_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SSDTO.EmailVerifyCode_DTO.email_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email_address(), target);
  }

  // string verify_code = 3;
  if (!this->_internal_verify_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_verify_code().data(), static_cast<int>(this->_internal_verify_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SSDTO.EmailVerifyCode_DTO.verify_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_verify_code(), target);
  }

  // string start_time = 4;
  if (!this->_internal_start_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_start_time().data(), static_cast<int>(this->_internal_start_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SSDTO.EmailVerifyCode_DTO.start_time");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_start_time(), target);
  }

  // string valid_time = 5;
  if (!this->_internal_valid_time().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_valid_time().data(), static_cast<int>(this->_internal_valid_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SSDTO.EmailVerifyCode_DTO.valid_time");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_valid_time(), target);
  }

  // .SSDTO.Business_Type type = 6;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSDTO.EmailVerifyCode_DTO)
  return target;
}

size_t EmailVerifyCode_DTO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSDTO.EmailVerifyCode_DTO)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email_address = 2;
  if (!this->_internal_email_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email_address());
  }

  // string verify_code = 3;
  if (!this->_internal_verify_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_verify_code());
  }

  // string start_time = 4;
  if (!this->_internal_start_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_start_time());
  }

  // string valid_time = 5;
  if (!this->_internal_valid_time().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_valid_time());
  }

  // bool is_request = 1;
  if (this->_internal_is_request() != 0) {
    total_size += 1 + 1;
  }

  // .SSDTO.Business_Type type = 6;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmailVerifyCode_DTO::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EmailVerifyCode_DTO::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmailVerifyCode_DTO::GetClassData() const { return &_class_data_; }


void EmailVerifyCode_DTO::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EmailVerifyCode_DTO*>(&to_msg);
  auto& from = static_cast<const EmailVerifyCode_DTO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSDTO.EmailVerifyCode_DTO)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email_address().empty()) {
    _this->_internal_set_email_address(from._internal_email_address());
  }
  if (!from._internal_verify_code().empty()) {
    _this->_internal_set_verify_code(from._internal_verify_code());
  }
  if (!from._internal_start_time().empty()) {
    _this->_internal_set_start_time(from._internal_start_time());
  }
  if (!from._internal_valid_time().empty()) {
    _this->_internal_set_valid_time(from._internal_valid_time());
  }
  if (from._internal_is_request() != 0) {
    _this->_internal_set_is_request(from._internal_is_request());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EmailVerifyCode_DTO::CopyFrom(const EmailVerifyCode_DTO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSDTO.EmailVerifyCode_DTO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailVerifyCode_DTO::IsInitialized() const {
  return true;
}

void EmailVerifyCode_DTO::InternalSwap(EmailVerifyCode_DTO* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_address_, lhs_arena,
      &other->_impl_.email_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.verify_code_, lhs_arena,
      &other->_impl_.verify_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.start_time_, lhs_arena,
      &other->_impl_.start_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.valid_time_, lhs_arena,
      &other->_impl_.valid_time_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmailVerifyCode_DTO, _impl_.type_)
      + sizeof(EmailVerifyCode_DTO::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(EmailVerifyCode_DTO, _impl_.is_request_)>(
          reinterpret_cast<char*>(&_impl_.is_request_),
          reinterpret_cast<char*>(&other->_impl_.is_request_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EmailVerifyCode_DTO::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_EmailVerifyCode_2eproto_getter, &descriptor_table_EmailVerifyCode_2eproto_once,
      file_level_metadata_EmailVerifyCode_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace SSDTO
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SSDTO::EmailVerifyCode_DTO*
Arena::CreateMaybeMessage< ::SSDTO::EmailVerifyCode_DTO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SSDTO::EmailVerifyCode_DTO >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
